// --------------------------------------------------------------------------------------------------------------------
// <copyright file="MailChimpException.cs" company="Brandon Seydel">
//   N/A
// </copyright>
// --------------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace MailChimp.Net.Core
{
    /// <summary>
    /// The exception that comes back from Mail Chimp when an invalid operation has occured.
    /// </summary>
    [JsonConverter(typeof(MailChimpExceptionConverter))]
    public class MailChimpException : Exception
    {
        [JsonConstructor]
        public MailChimpException(string detail, string title, string type, int? status, string instance, List<Error> errors)
        {
            Detail = detail;
            Title = title;
            Type = type;
            Status = status ?? 0;
            Instance = instance;

            var errorText = string.Empty;

            errorText =
                $"Title: {this.Title + Environment.NewLine} Type: {this.Type + Environment.NewLine} Status: {this.Status + Environment.NewLine} + Detail: {this.Detail + Environment.NewLine}";
            this.Errors = new List<Error>(errors);
            errorText += "Errors: " + string.Join(" : ", this.Errors.Select(x => x.Field + " " + x.Message));
        }

		public List<Error> Errors { get; set; }

		public class Error
		{
			[JsonProperty("field")]
			public string Field { get; set; }
			[JsonProperty("message")]
			public string Message { get; set; }
		}


		/// <summary>
		/// Gets or Sets a human-readable explanation specific to this occurrence of the problem. Learn more about errors.
		/// </summary>
		public string Detail { get; set; }

        /// <summary>
        /// Gets or sets a string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.
        /// </summary>
        public string Instance { get; set; }

        /// <summary>
        /// Gets or sets the HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.
        /// </summary>
        public int Status { get; set; }

        /// <summary>
        /// Gets or sets a short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.
        /// </summary>
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets an absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.
        /// </summary>
        public string Type { get; set; }
    }
}